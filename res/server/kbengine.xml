<root>
	<!--
		个性化服务端配置({assets}/res/server/kbengine.xml)

		如果你需要改变引擎设置, 请在({assets}/res/server/kbengine.xml)中覆盖kbe/res/server/kbengine_defaults.xml的对应参数来修改, 
		这样的好处是不会破坏引擎的默认设置，在你更新引擎时也不会产生冲突，以及在多个逻辑项目时不会影响到其他的项目设置。
		详细说明请参考：http://kbengine.org/cn/docs/configuration/kbengine.html
	-->
	
	<trace_packet>
		<debug_type> 0 </debug_type>
	</trace_packet>
	
	<publish>
		<!-- 发布状态, 可在脚本中获取该值。 KBEngine.publish()
			(apps released state, This value can be obtained in the script. KBEngine.publish())
			Type: Integer8
			0 : debug
			1 : release
			其他自定义(Other custom)
		-->
		<state> 0 </state>

		<!-- 脚本层发布的版本号
			(Script layer released version number)
		 -->
		<script_version> 0.1.0 </script_version>
	</publish>

	<channelCommon>
		<!-- 加密通信，只对外部通道
			(Encrypted communication, channel-external only)
			
			可选择的加密方式(Optional encryption):
				0: 无加密(No Encryption)
				1: Blowfish
				2: RSA (res\key\kbengine_private.key)
		 -->
		<encrypt_type> 0 </encrypt_type>
	</channelCommon>
	
	<!-- defined => kbe/res/server/kbengine_defs.xml -->
	<dbmgr>
		<!-- debug模式下可输出读写操作信息
		    (Debug mode can output the read and write informations)
		 -->
		<debug> false </debug>

		<!-- 是否检查defs-MD5
			(Check whether the defs-MD5) 
		-->
		<allowEmptyDigest> false </allowEmptyDigest>	

		<!-- Interfaces进程的地址（参考interfaces中地址配置）
			(Address of Interfaces process)
		-->
		<InterfacesServiceAddr>
			<!-- 如果enable为false则相关数据不转发到Interfaces进程 
				注意：如果为true，dbmgr认为数据将由interfaces交给第三方平台处理
			-->
			<enable> false		</enable>
			<host>	 localhost	</host>
			<port>	 30099		</port>
		</InterfacesServiceAddr>

		<!-- 数据库接口 
			(database interfaces)
		-->
		<databaseInterfaces>
			<!-- 数据库接口名称 （可以定义多个不同的接口，但至少存在一个default）
				（Database interface name)
			-->
			<default>
				<!-- 如果为true，则为纯净的数据库，引擎不创建实体表 
					（If true is pure database, engine does not create the entity table)
				-->
				<pure> false </pure>

				<!-- 数据库类型 （mysql、redis）
					（Database type(mysql, redis))
				-->
				<type> mysql </type>											<!-- Type: String -->

				<!-- 数据库地址 
					（Database address)
				-->
				<host> localhost </host>										<!-- Type: String -->
				<port> 3306 </port>												<!-- Type: Integer -->

				<!-- 数据库账号验证 
					（Database auth)
				-->
				<auth>  
					<username> root </username>									<!-- Type: String -->
					<password> qcplay_2018 </password>							<!-- Type: String -->
					
					<!-- 为true则表示password是加密(rsa)的, 可防止明文配置 
						(is true, password is RSA)
					-->
					<encrypt> true </encrypt>
				</auth>

				<!-- 数据库名称 
					(Database name)
				-->
				<databaseName> kbe </databaseName> 								<!-- Type: String -->
				
				<!-- 数据库允许的连接数 
					(Number of connections allowed by the database)
				-->
				<numConnections> 5 </numConnections>							<!-- Type: Integer -->
				
				<!-- 字符编码类型 
					(Character encoding type)
				-->
				<unicodeString>
					<characterSet> utf8 </characterSet> 						<!-- Type: String -->
					<collation> utf8_bin </collation> 							<!-- Type: String -->
				</unicodeString>
			</default>
		</databaseInterfaces>
		
		<!-- 账号系统
			(Account system)
		-->

		<account_system>
			<!-- 账号Entity的名称
			    (Name of AccountEntity)
			 -->
			<accountEntityScriptType> Account </accountEntityScriptType>
			
			<!-- 新账号默认标记(可组合，填写时按十进制格式) 
				(Default flags a new account, Can be combined, Fill in decimal format when)
				常规标记(normal flag)	= 0x00000000
				锁定标记(lock flag)	= 0x000000001
				未激活标记(normal flag)	= 0x000000002
			-->
			<accountDefaultFlags> 0 </accountDefaultFlags>							<!-- Type: Integer -->
			
			<!-- 新账号默认过期时间(秒, 引擎会加上当前时间) 
				(New account default expiration time (seconds, the engine will add the current time))
			-->
			<accountDefaultDeadline> 0 </accountDefaultDeadline>	

			<!-- 账号找回密码相关
				(Account reset password)
			-->
			<account_resetPassword>
				<!-- 是否开放重设密码
					(Whether open reset password)
				-->
				<enable>	true	</enable>
			</account_resetPassword>
			
			<!-- 账号注册相关
				(Account registration)
			-->
			<account_registration> 
				<!-- 是否开放注册 
					(Whether open registration)
				-->
				<enable>	true	</enable>
				
				<!-- 登录合法时游戏数据库找不到游戏账号则自动创建 
					(When logged in, the game database can not find the game account is automatically created)
				-->
				<loginAutoCreate> false </loginAutoCreate>
			</account_registration>
		</account_system>

		<!-- entityID分配器，进入溢出范围则请求获取新的ID资源 
			(The entityID allocator, enter the overflow area will get the new ID's)
		-->
		<ids>
			<increasing_range> 2000 </increasing_range>				<!-- Type: Integer -->
		</ids>
	</dbmgr>
	
	<baseapp>
		<backupPeriod> 500 </backupPeriod>
	</baseapp>
</root>